{"version":3,"sources":["components/Preview.jsx","actions/index.js","components/BannerForm.jsx","components/Buttons.jsx","reducers/index.js","index.jsx"],"names":["Preview","clickBanner","link","window","open","banner","this","props","Object","keys","length","className","id","onClick","onKeyPress","role","tabIndex","style","backgroundColor","color","src","image","alt","title","substring","React","Component","connect","state","createBanner","createAction","exportPNG","exportHTML","exportJSON","actionCreators","actions","BannerForm","submit","values","_","uniqueId","handleSubmit","onSubmit","Field","name","component","type","onChange","ConnectedBannerForm","reduxForm","form","Buttons","handlePNG","handleHTML","handleJSON","handleActions","payload","html","document","getElementById","htmlToImage","then","blob","saveAs","element","navigator","clipboard","writeText","outerHTML","JSON","stringify","combineReducers","formReducer","ext","__REDUX_DEVTOOLS_EXTENSION__","devtoolMiddleware","store","createStore","reducers","render"],"mappings":"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","file":"static/js/main.656f7602.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport '../css/Preview.css';\n\nconst mapStateToProps = (state) => {\n  const { banner } = state;\n  return { banner };\n};\n\nclass Preview extends React.Component {\n  clickBanner = (link) => () => {\n    window.open(link);\n  }\n\n  render() {\n    const { banner } = this.props;\n    if (Object.keys(banner).length === 0) return null;\n    return (\n      <div className=\"preview-wrapper\">\n      <div id={banner.id} className=\"story-preview\" onClick={this.clickBanner(banner.link)} onKeyPress={this.clickBanner(banner.link)} role=\"link\" tabIndex={0} style={{backgroundColor: banner.color}}>\n        <img src={banner.image} alt={banner.title} />\n        <div className=\"story-preview-title\">{banner.title ? banner.title.substring(0, 33) : null}</div>\n      </div>\n      </div>\n      )\n  }\n}\n\nexport default connect(mapStateToProps)(Preview);\n","import { createAction } from 'redux-actions';\n\nexport const createBanner = createAction('BANNER_CREATE');\nexport const exportPNG = createAction('EXPORT_PNG');\nexport const exportHTML = createAction('EXPORT_HTML');\nexport const exportJSON = createAction('EXPORT_JSON');\n","import React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport * as actions from '../actions/index';\nimport '../css/BannerForm.css';\n\nconst mapStateToProps = () => {\n  const props = {};\n  return props;\n};\n\nconst actionCreators = {\n  createBanner: actions.createBanner,\n};\n\nclass BannerForm extends React.Component {\n  submit = (values) => {\n    const { createBanner } = this.props;\n    createBanner({ ...values, id: _.uniqueId() });\n  };\n\n  render() {\n    const { handleSubmit } = this.props;\n\n    return (\n        <form className=\"form\" onSubmit={handleSubmit(this.submit)}>\n          <div className=\"form-group\">\n            <label>Ссылка на фоновую иллюстрацию</label>\n            <div>\n              <Field className=\"form-control\" name=\"image\" component=\"input\" type=\"text\" onChange={handleSubmit(this.submit)} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label>Какой будет заголовок?</label>\n            <div>\n              <Field className=\"form-control\" name=\"title\" component=\"input\" type=\"text\" onChange={handleSubmit(this.submit)}/>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label>Цвет для заливки</label>\n            <div>\n              <Field name=\"color\" component=\"input\" type=\"color\" onChange={handleSubmit(this.submit)} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label>Ссылка для перехода по клику на превью</label>\n            <div>\n              <Field className=\"form-control\" name=\"link\" component=\"input\" type=\"text\" onChange={handleSubmit(this.submit)}/>\n            </div>\n          </div>\n        </form>\n    );\n  }\n}\n\nconst ConnectedBannerForm = connect(mapStateToProps, actionCreators)(BannerForm);\n\nexport default reduxForm({\n  form: 'createBanner',\n})(ConnectedBannerForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\nimport '../css/Buttons.css';\n\nconst mapStateToProps = () => {\n  const props = {};\n  return props;\n};\n\nconst actionCreators = {\n  exportPNG: actions.exportPNG,\n  exportHTML: actions.exportHTML,\n  exportJSON: actions.exportJSON,\n};\n\nclass Buttons extends React.Component {\n  handlePNG = () => {\n    const { exportPNG } = this.props;\n    exportPNG();\n  };\n\n  handleHTML = () => {\n    const { exportHTML } = this.props;\n    exportHTML();\n  };\n\n  handleJSON = () => {\n    const { exportJSON } = this.props;\n    exportJSON();\n  };\n\n  render() {\n    return (\n      <div className=\"d-flex justify-content-center flex-wrap button-group\">\n        <button className=\"btn\" type=\"button\" onClick={this.handlePNG}>Сохранить как PNG</button>\n        <button className=\"btn\" type=\"button\" onClick={this.handleHTML}>Скопировать как HTML</button>\n        <button className=\"btn\" type=\"button\" onClick={this.handleJSON}>Скопировать как JSON</button>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, actionCreators)(Buttons);\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport { reducer as formReducer } from 'redux-form';\nimport * as htmlToImage from 'html-to-image';\nimport { saveAs } from 'file-saver';\nimport * as actions from '../actions/index';\n\n\nconst banner = handleActions({\n  [actions.createBanner](state, { payload }) {\n    return {\n      ...state,\n      id: payload.id,\n      color: payload.color,\n      link: payload.link,\n      image: payload.image,\n      title: payload.title,\n    };\n  },\n  [actions.exportPNG](state) {\n    const html = document.getElementById(state.id);\n    htmlToImage.toBlob(html)\n    .then((blob) => {\n      saveAs(blob, 'preview.png');\n    })\n    return state;\n  },\n  [actions.exportHTML](state) {\n    const element = document.getElementById(state.id);\n    navigator.clipboard.writeText(element.outerHTML);\n    return state;\n  },\n  [actions.exportJSON](state) {\n    navigator.clipboard.writeText(JSON.stringify(state));\n    return state;\n  },\n}, {});\n\nexport default combineReducers({\n  banner,\n  form: formReducer,\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Preview from './components/Preview';\nimport BannerForm from './components/BannerForm';\nimport Buttons from './components/Buttons';\nimport reducers from './reducers/index';\nimport './css/styles.css';\n\nconst ext = window.__REDUX_DEVTOOLS_EXTENSION__;\nconst devtoolMiddleware = ext && ext();\n\nconst store = createStore(\n  reducers,\n  devtoolMiddleware,\n);\n\nrender(\n  <Provider store={store}>\n    <Preview />\n    <BannerForm />\n    <Buttons />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}